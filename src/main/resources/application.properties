# mysql 데이터베이스 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/boardex?useSSL=false&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=6416

# JPA 설정
spring.jpa.generate-ddl=true
#Open-In-View 또는 Open-Session-In-View (OSIV)
#true일 경우 영속성 컨텍스트가 트랜잭션 범위를 넘어선 레이어까지 살아있다
spring.jpa.open-in-view=false
#update : 기존의 스키마를 유지하며 JPA에 의해 변경된 부분만 추가한다.
#validate : 엔티티와 테이블이 정상적으로 매핑되어있는지만 검증한다.
#create : 기존에 존재하는 스키마를 삭제하고 새로 생성한다.
#create-drop : 스키마를 생성하고 애플리케이션이 종료될 때 삭제한다.
#none : 초기화 동작을 하지 않는다.
spring.jpa.hibernate.ddl-auto=update
#JPA가 생성한 SQL문 로그로 보여줄지 결정
spring.jpa.show-sql=true
#Hibernate가 DB에 보내는 sql 쿼리를 보기 좋게 변경
spring.jpa.properties.hibernate.format_sql=true
#JPA 데이터베이스 플랫폼 지정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#이미 생성된 결과를 서버에서 캐싱할것인지 설정.
#개발할때 false 설정, view를 수정하면 바로 서버 재시작 없이 확인 가능
spring.thymeleaf.cache=false

logging.level.root=info 
logging.level.com.example.board=debug 
